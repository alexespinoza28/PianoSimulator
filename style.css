@import url('https://fonts.googleapis.com/css2?family=NeonCyberpunk&display=swap');

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  margin: 0;
  background-color: #282c34;
  color: white;
  text-align: center;
  font-family: Lora, sans-serif;
  font-size: 16px;
}

.piano {
  display: flex;
  width: min-content;
  margin: 20px auto;
  margin-top: 40px;
  background-color: #ddd;
  border: 2px solid #ccc;
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  transform: scale(1.5);
}
.key {
  height: 200px;
  border: 1px solid black;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  font-size: 18px;
  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.3);
  transition: all 0.2s ease; /* For smooth hover/playing transitions */
}

.white {
  width: 40px;
  background: linear-gradient(to bottom, #fff, #e0e0e0);
  border-radius: 0 0 5px 5px; /* Rounded bottom corners only */
}

.black {
  width: 30px;
  height: 150px;
  background: linear-gradient(to bottom, #555, #000);
  color: white;
  margin-left: -15px;
  margin-right: -15px;
  z-index: 2;
  border-radius: 0 0 3px 3px; /* Rounded bottom corners only */
}

.key:hover {
  transform: translateY(-2px);
}

.playing {
  background-color: #ffddcc; /* Example: slightly warmer color when playing */
  transform: scale(1.02);
}

@keyframes titleAnimation {
  0% {
    color: #ffffff;
    transform: scale(1);
  }
  50% {
    color: #eeeeee;
    transform: scale(1.02);
  }
  100% {
    color: #ffffff;
    transform: scale(1);
  }
}

.animated-title {
  font-size: 60px;
  margin-bottom: 20px;
  animation: titleAnimation 3s infinite;
  position: absolute;
  top: 0;
  padding-top: 60px;
  text-shadow: 0 0 30px #eeeeee;
  margin: 0 auto;
}

.key-config {
    position: fixed;
    right: 80px;
    top: 50%; /* Adjust as needed to vertically center */
    transform: translateY(-50%); /* Adjust as needed to vertically center */
    
  padding: 10px;
  padding-left: 400;
  background-color: #6940c2;
  border-radius: 8px;
  box-shadow: 0 10px 30px rgba(120, 117, 117, 0.5);
}
.config-item {
    display: flex;
   padding-left: 60px;
    align-items: center;
    margin-bottom: 5px;
    line-height: 20px; /* Adjust value as needed  */ 
    
}

  .keyboard-key {
    display: inline-flex; /* To allow styling and centering text */
    justify-content: center; /* Center the text inside the key */
    align-items: center; /* Center the text vertically */
    width: 50px; /* Set a fixed width */
    border: 1px solid #666;
    padding: 5px 10px;
    margin-right: 10px; /* Add some space between the key and the text */
    border-radius: 3px;
    background-color: #444040;
    box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.3);
  }
.container {
  display: flex; /* Arrange piano and configuration side-by-side */
  justify-content: flex-end; /
}

/* Add a media query to adjust the layout on smaller screens */



.container {
    display: flex;
    /* Optional: Control whether items should wrap */
    flex-wrap: wrap; /* For items to wrap to the next line if needed */
    /* Or */
    flex-wrap: nowrap; /* For items to stay on a single line */
}



/*new theme*/

/* Shared styles */

body.cyber-theme {
  background-image: url('noise-texture.png');  /* Replace with your noise texture URL */       
    background-blend-mode: multiply; /* Blend noise texture with gradients */
    
}


body.cyber-theme .key {
  background-image: linear-gradient(to bottom, #252525, #181818); /* Metallic look */
  border: 2px solid #8221e9; /* Accent border */
  box-shadow: inset 0 -6px 4px rgba(0, 0, 0, 0.6), /* Inset for depth */
              0 2px 5px 2px #7600f5; /* Softer outer glow */
              background-image: url('noise-texture.png');  /* i accidentally did this but then it made the keys glow when played, i don't know how but it looks cool*/   
            
              
}
body.cyber-theme .piano {
  background-color: #232323; /* Slightly lighter against the background */
  font-family: "Kode Mono", monospace;
  
}

body.cyber-theme .animated-title { 
  
  font-family: "Kode Mono", monospace;
      border: 2px solid #7600f5;  /* Glowing border */
      padding: 10px;  /* Add some padding around the text */
      border-radius: 5px;  /* Slightly rounded corners */
      animation: neonFlicker 1s infinite alternate;
      top: 10%;
      background-color: rgba(46, 44, 44, 0.5); /* Semi-transparent dark background */ 
      box-shadow: inset 0 0 10px #000; /* Adds an inset shadow for depth */
     
}
      


@keyframes neonFlicker {
  from {
     text-shadow: 
         0 0 5px #7600f5,  
         0 0 10px #6200f5, 
         0 0 20px #7600f5,
         0 0 30px #41c0ff, 
         2px 1px 0 #ff0088, 
         -6px -1px 0 #7600f5;
 } to {
     text-shadow: 
         0 0 8px #6200f5,
         0 0 15px #7600f5, 
         0 0 30px #6200f5,
         0 0 10px #ff0088,
         3px 2px 0 #6200f5,
         -2px 0 0 #7600f5; 
 }

}
body.cyber-theme .key-config  {
  font-family: "Kode Mono", monospace;
  color: #d847fc; /* Neon purple */
}




.button {
  position: relative;
  top: 55%;
  right: 0%;
  padding: 10px 22px;
  border-radius: 6px;
  border: none;
  color: #fff;
  cursor: pointer;
  background-color: #7d2ae8;
  transition: all 0.2s ease;
  scale: 1.3;
}



.button:active {
  transform: scale(0.96);
}

.button:before,
.button:after {
  position: absolute;
  content: "";
  width: 150%;
  left: 50%;
  height: 100%;
  transform: translateX(-200%);
  z-index: -1000;
  background-repeat: no-repeat;
}






@media screen and (max-width: 768px) {
  .key {
    height: 150px;
    font-size: 14px;
  }

  .white {
    width: 30px;
  }

  .black {
    width: 20px;
    height: 100px;
  }

  .animated-title {
    font-size: 30px;
  }

  .key-config {
    right: 10px;
    top: 10px;
    transform: none;
  }

  .keyboard-key {
    width: 30px;
  }
}

@media screen and (max-width: 768px) {
  .piano {
    transform: scale(1.7);
  }
}

@media screen and (max-width: 1300px) {
  .key-config {
    display: none;
  }
}